#!/bin/sh

BLOCK_NAME="prayersched"
ptargs="-c mwl -l 4.90310 -n 114.93980"

# The -d switch of prayertimes requires $DATEMSK which tells it
# about the date format. In this case it is stored in a text file
# .timetemplate.txt and is stored in ~/
export DATEMSK=~/.timetemplate.txt

pname[0]="Fajr"
pname[1]="Sunrise"
pname[2]="Dhuhr"
pname[3]="Asr"
pname[4]="Maghrib"
pname[5]="Isha"

pnlen=6

# Using prayertimes to get the prayer time.
for i in `seq 0 $((${pnlen} - 1))`;
do
	ptime[$i]=`prayertimes $ptargs | grep ${pname[$i]} | grep -o "[0-9]\{2\}\:[0-9]\{2\}"`
done

# First determine the system time.
# Then determine what's next notification should be.
# For example if Dhuhr is at 02:00 PM, and the system
# time is at 01:00 PM, then notify only the Dhuhr time.
ctime=`date "+%H%M"`
preisha=0 # Check if the time has past the time of isha
          # if yes set it to 1
for i in `seq 0 $((${pnlen} - 1))`;
do
	time=`echo ${ptime[$i]} | sed 's/://'`
	if [ $time -ge $ctime ]; then
	    nnext=${pname[$i]} # Name of next prayer time
        tnext=${ptime[$i]} # Time of next prayer time
        preisha=1
        break
	fi
done

# If the time is past isha already, get the 
# prayer time of Fajr for the next day
if [ $preisha -eq "0" ]; then
    nnext=${pname[0]}
    tnext=`prayertimes $ptargs -d $(date --date="tomorrow" +"%d-%m-%Y") | grep $nnext | grep -o "[0-9]\{2\}\:[0-9]\{2\}"`
fi

# Unfortunately, prayertimes only return the time in 24-hour format.
# For someone like me who are illiterate when it comes to 24-hour clock,
# convert $tnext to a 12-hour clock.
tnext_h=$(((`echo $tnext | cut -c 1-2` + 11) % 12 + 1))
if [ $tnext_h -lt 10 ]; then
    tnext_h="0$tnext_h" # Add leading zero to single digit hour
fi
tnext_m=$(echo $tnext | cut -c 4-5)
tnext_d=AM # AM or PM
if [ `echo $tnext | cut -c 1-2` -ge 12 ]; then
    tnext_d=PM
fi
tnext="${tnext_h}:${tnext_m} ${tnext_d}"

full_text="${nnext}: ${tnext}"
short_text="${nnext}: ${tnext}"
echo $full_text
echo $short_text
